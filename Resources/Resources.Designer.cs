//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SsmsSchemaFolders.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SsmsSchemaFolders.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active ähnelt.
        /// </summary>
        internal static string PropertyCategorySchemaFolderOptionsActive {
            get {
                return ResourceManager.GetString("PropertyCategorySchemaFolderOptionsActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder Display Options ähnelt.
        /// </summary>
        internal static string PropertyCategorySchemaFolderOptionsFolderDisplayOptions {
            get {
                return ResourceManager.GetString("PropertyCategorySchemaFolderOptionsFolderDisplayOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object Display Options ähnelt.
        /// </summary>
        internal static string PropertyCategorySchemaFolderOptionsObjectDisplayOptions {
            get {
                return ResourceManager.GetString("PropertyCategorySchemaFolderOptionsObjectDisplayOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performance ähnelt.
        /// </summary>
        internal static string PropertyCategorySchemaFolderOptionsPerformance {
            get {
                return ResourceManager.GetString("PropertyCategorySchemaFolderOptionsPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a dot after the schema name on the folder label. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsAppendDot {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsAppendDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add the right click and connection properties of the parent node to the schema folder node. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsCloneParentNode {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsCloneParentNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group sql objects in Object Explorer (tables, views, etc.) into schema folders. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsEnabled {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show separate debug output pane ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsEnableDebugOutput {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsEnableDebugOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hold the modifier keys down to do the opposite of the Enabled setting. The letter key (or None) in the setting is not used but is required by the settings editor. To change a folder that has already been opened, right-click the folder and select refresh while holding the keys. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsEnabledModifierKeys {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsEnabledModifierKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die folder names can be left in original case or all changed to lower or upper ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsFolderNameCase {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsFolderNameCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The type of sorting to use to create the folders. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsLevel1FolderType {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsLevel1FolderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Min node count required before using faster but inaccurate method to get schema. Zero = disabled. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsQuickSchema {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsQuickSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use a list of regular expressions to build the names of the groups from the name of the object (f.e. &quot;^(log)&quot; groups all objects in a folder called log if they start with the same string) ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsRegularExpressions {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsRegularExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove the schema name from the object node. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsRenameNode {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsRenameNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Milliseconds. Increasing will update faster but be more unresponsive. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsUnresponsiveTimeout {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsUnresponsiveTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Min node count required before using faster method but will be unresponsive while updating. Zero = disabled. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsUseClear {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsUseClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the icon of the last child node as the folder icon. If false then use the parent node (i.e. folder) icon. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionSchemaFolderOptionsUseObjectIcon {
            get {
                return ResourceManager.GetString("PropertyDescriptionSchemaFolderOptionsUseObjectIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Append Dot ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsAppendDot {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsAppendDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone Parent Node ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsCloneParentNode {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsCloneParentNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsEnabled {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show separate debug output pane ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsEnableDebugOutput {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsEnableDebugOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modifier Keys ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsEnabledModifierKeys {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsEnabledModifierKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die original/upper/lower case of folder names ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsFolderNameCase {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsFolderNameCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder Type ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsLevel1FolderType {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsLevel1FolderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quick schema from node text ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsQuickSchema {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsQuickSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Build group names by regular expressions ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsRegularExpressions {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsRegularExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename Node ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsRenameNode {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsRenameNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unresponsive timeout ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsUnresponsiveTimeout {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsUnresponsiveTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Nodes.Clear ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsUseClear {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsUseClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Object Icon ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameSchemaFolderOptionsUseObjectIcon {
            get {
                return ResourceManager.GetString("PropertyDisplayNameSchemaFolderOptionsUseObjectIcon", resourceCulture);
            }
        }
    }
}
